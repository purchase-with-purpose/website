---
import "../styles/global.css";
import AppBox from "../components/AppBox.astro";

const appBoxes = [
  {
    label: "Mail",
    type: "mail",
    from: {
      selected: { name: "Gmail", logo: "images/logos/gmail.jpg" },
      options: [
        { name: "Gmail", logo: "images/logos/gmail.jpg" },
        { name: "iCloud Mail", logo: "images/logos/icloud_mail.jpg" },
        { name: "Outlook", logo: "images/logos/outlook.jpg" },
      ],
    },
    to: {
      selected: { name: "", logo: "" },
      options: [
        { name: "Disroot webmail", logo: "images/logos/disroot_webmail.jpg" },
        { name: "Forward Email", logo: "images/logos/forwardemail_net.jpg" },
        { name: "Mailbox", logo: "images/logos/mailbox.jpg" },
      ],
    },
  },
];
---

<main
  class="bg-[rgb(22,22,22)] min-h-screen text-white flex w-full flex-col p-4">
  <div
    class="flex w-full flex-row items-center justify-between md:px-4 md:pt-4">
    <a class="green-text pr-1 text-2xl font-bold tracking-[-0.09em]" href="/"
      >App Pack</a
    >
    <div class="flex flex-row items-center gap-8">
      <button
        id="download-navbar"
        class="flex h-11 cursor-pointer items-center justify-center gap-2 rounded-lg bg-white px-5 text-black transition-all duration-150 hover:bg-white/80"
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          width="18"
          height="18"
          viewBox="0 0 24 24"
          fill="none"
          stroke="black"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="lucide lucide-download"
          aria-hidden="true"
          ><path d="M12 15V3"></path><path
            d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><path
            d="m7 10 5 5 5-5"></path></svg
        ><span>DOWNLOAD</span></button
      >
    </div>
  </div>
  <section
    id="capture-area"
    class="mt-16 mb-10 grid grid-cols-1 gap-14 sm:mx-auto md:grid-cols-2 md:gap-20 lg:my-24 lg:gap-28 xl:my-24 xl:grid-cols-3 xl:gap-20 2xl:my-32 2xl:gap-40">
    {appBoxes.map((item) => <AppBox data={item} />)}
  </section>
</main>
<script
  src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"
></script>
<script>
  document
    .getElementById("download-navbar")
    .addEventListener("click", async () => {
      const captureArea = document.getElementById("capture-area");
      if (!captureArea) return;

      // Fix only inside capture area
      captureArea.querySelectorAll("*").forEach((el) => {
        const bg = getComputedStyle(el).backgroundColor;
        if (bg.includes("oklab")) el.style.backgroundColor = "#161616";
        const txt = getComputedStyle(el).color;
        if (txt.includes("oklab")) el.style.color = "#ffffff";
      });

      const btn = document.getElementById("download-navbar");
      btn.querySelector("span").textContent = "Generating...";
      btn.disabled = true;

      try {
        const canvas = await html2canvas(captureArea, {
          backgroundColor: "#161616",
          scale: 1,
        });

        const image = canvas.toDataURL("image/png");
        const a = document.createElement("a");
        a.href = image;
        a.download = "pack.png";
        a.click();
      } catch (err) {
        console.error("Capture failed:", err);
      } finally {
        btn.querySelector("span").textContent = "DOWNLOAD";
        btn.disabled = false;
      }
    });
</script>
